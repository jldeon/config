#!/bin/bash
export EDITOR=vim

function qgrep() {
    echo "----------"
    grep -IRn --exclude-dir="*\.git*" --include=\*.{java,cpp,c,cc,h,hpp,xml,py,mk,sh,jinja} --include=Makefile --include=CMakeLists.txt --include=Jenkins\* --include=Dockerfile\* "$*"
}

function fixaudio() {
    pulseaudio -k
    sudo alsa force-reload
    aplay /usr/share/sounds/alsa/Front_Center.wav
}

function mntssh() {
    # call with arguments:
    # remote host, remote directory, local directory
    sshfs -o follow_symlinks $1:$2 $3
}

function runchrome() {
    /opt/google/chrome/google-chrome --disk-cache-size=10000000 --bookmark-menu --touch-devices=123
}

function cfgup() {
    cd $JLDCFGDIR
    git pull
    git submodule init
    git submodule update --recursive --remote
    source $JLDCFGDIR/bash.cfg
    echo "Use Ctrl-a r to reload tmux config"
}

HISTSIZE=9000
HISTFILESIZE=$HISTSIZE
HISTCONTROL=ignorespace:ignoredups

_bash_history_sync() {
  builtin history -a         #1
  HISTFILESIZE=$HISTSIZE     #2
  #builtin history -c         #3
  #builtin history -r         #4
}

history() {                  #5
  _bash_history_sync
  builtin history "$@"
}

PROMPT_COMMAND=_bash_history_sync

if [ -f $HOME/.bashrc.jldlocal ]; then
    source $HOME/.bashrc.jldlocal
fi

if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
    TERM=screen-256color tmux new -A -s default
else
    if [[ "$TERM" =~ tmux ]]; then
        echo "Error starting tmux!"
    fi
fi

