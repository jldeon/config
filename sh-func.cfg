# Common functions/aliases for all shells

function qgrep() {
    echo "----------"
    grep -IRn --exclude-dir="*\.git*" --include=\*.{java,cpp,c,cc,h,hpp,xml,py,mk,sh,jinja} --include=Makefile --include=CMakeLists.txt --include=Jenkins\* --include=Dockerfile\* "$*"
}

function fixaudio() {
    pulseaudio -k
    sudo alsa force-reload
    aplay /usr/share/sounds/alsa/Front_Center.wav
}

function mntssh() {
    # call with arguments:
    # remote host, remote directory, local directory
    sshfs -o follow_symlinks -o idmap=user -o allow_other \
        -o reconnect,ServerAliveInterval=15,ServerAliveCountMax=3 \
        $1:$2 $3
}

function runchrome() {
    /opt/google/chrome/google-chrome --disk-cache-size=10000000 --bookmark-menu --touch-devices=123
}

function cfgup() {
    cd $JLDCFGDIR
    git pull
    git submodule init
    git submodule update --recursive --remote
    
    SHELLTYPE=$(basename "$SHELL")
    source $JLDCFGDIR/$SHELLTYPE.cfg
    echo "Use Ctrl-a r to reload tmux config"
}

function assh() {
    while true; do
        ssh "$@"
        echo "ssh exited, will retry in 5 seconds..."
        sleep 5
    done
}

function pathadd () {
    if ! echo "$PATH" | grep -Eq "(^|:)$1($|:)" ; then
       if [ "$2" = "after" ] ; then
          PATH="$PATH:$1"
       else
          PATH="$1:$PATH"
       fi
    fi
}

function getshell() {
    # Works if finger is installed
    if [ -x "$(command -v finger)" ]; then
        LOGIN_SHELL=$(finger $USER | grep 'Shell:*' | cut -f3 -d ":")
        echo $(basename "$LOGIN_SHELL")
        return 0
    fi
    # Works on most Linux based installs (but not OSX)
    if [ -x "$(command -v getent)" ]; then
        LOGIN_SHELL=$(getent passwd $USER | cut -f7 -d ":")
        echo $(basename ${LOGIN_SHELL})
        return 0
    fi
    # Not the best solution, but if all else fails...
    LOGIN_SHELL=$(grep $USER /etc/passwd | cut -f7 -d ":")
    echo $(basename ${LOGIN_SHELL})
    return 0
}

function justpush() {
    git push -u origin HEAD
}
